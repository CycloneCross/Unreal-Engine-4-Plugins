// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
struct FVector2D;
#ifdef MOBILEGESTURERECOGNIZERPLUGIN_GestureMathLibrary_generated_h
#error "GestureMathLibrary.generated.h already included, missing '#pragma once' in GestureMathLibrary.h"
#endif
#define MOBILEGESTURERECOGNIZERPLUGIN_GestureMathLibrary_generated_h

#define Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execScaleVector2DForScreen) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_Value); \
		P_FINISH; \
		*(FVector2D*)Z_Param__Result=UGestureMathLibrary::ScaleVector2DForScreen(Z_Param_Value); \
	} \
 \
	DECLARE_FUNCTION(execScaleFloatForScreen) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Value); \
		P_FINISH; \
		*(float*)Z_Param__Result=UGestureMathLibrary::ScaleFloatForScreen(Z_Param_Value); \
	} \
 \
	DECLARE_FUNCTION(execGetScalingFactorForScreen) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=UGestureMathLibrary::GetScalingFactorForScreen(); \
	} \
 \
	DECLARE_FUNCTION(execPointOnBottomHalfOfScreen) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_Point); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UGestureMathLibrary::PointOnBottomHalfOfScreen(Z_Param_Point); \
	} \
 \
	DECLARE_FUNCTION(execPointOnTopHalfOfScreen) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_Point); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UGestureMathLibrary::PointOnTopHalfOfScreen(Z_Param_Point); \
	} \
 \
	DECLARE_FUNCTION(execPointOnRightHalfOfScreen) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_Point); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UGestureMathLibrary::PointOnRightHalfOfScreen(Z_Param_Point); \
	} \
 \
	DECLARE_FUNCTION(execPointOnLeftHalfOfScreen) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_Point); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UGestureMathLibrary::PointOnLeftHalfOfScreen(Z_Param_Point); \
	} \
 \
	DECLARE_FUNCTION(execAngleBetweenLines) \
	{ \
		P_GET_STRUCT_REF(FVector2D,Z_Param_Out_Line1Start); \
		P_GET_STRUCT_REF(FVector2D,Z_Param_Out_Line1End); \
		P_GET_STRUCT_REF(FVector2D,Z_Param_Out_Line2Start); \
		P_GET_STRUCT_REF(FVector2D,Z_Param_Out_Line2End); \
		P_FINISH; \
		*(float*)Z_Param__Result=UGestureMathLibrary::AngleBetweenLines(Z_Param_Out_Line1Start,Z_Param_Out_Line1End,Z_Param_Out_Line2Start,Z_Param_Out_Line2End); \
	}


#define Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execScaleVector2DForScreen) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_Value); \
		P_FINISH; \
		*(FVector2D*)Z_Param__Result=UGestureMathLibrary::ScaleVector2DForScreen(Z_Param_Value); \
	} \
 \
	DECLARE_FUNCTION(execScaleFloatForScreen) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Value); \
		P_FINISH; \
		*(float*)Z_Param__Result=UGestureMathLibrary::ScaleFloatForScreen(Z_Param_Value); \
	} \
 \
	DECLARE_FUNCTION(execGetScalingFactorForScreen) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=UGestureMathLibrary::GetScalingFactorForScreen(); \
	} \
 \
	DECLARE_FUNCTION(execPointOnBottomHalfOfScreen) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_Point); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UGestureMathLibrary::PointOnBottomHalfOfScreen(Z_Param_Point); \
	} \
 \
	DECLARE_FUNCTION(execPointOnTopHalfOfScreen) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_Point); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UGestureMathLibrary::PointOnTopHalfOfScreen(Z_Param_Point); \
	} \
 \
	DECLARE_FUNCTION(execPointOnRightHalfOfScreen) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_Point); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UGestureMathLibrary::PointOnRightHalfOfScreen(Z_Param_Point); \
	} \
 \
	DECLARE_FUNCTION(execPointOnLeftHalfOfScreen) \
	{ \
		P_GET_STRUCT(FVector2D,Z_Param_Point); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UGestureMathLibrary::PointOnLeftHalfOfScreen(Z_Param_Point); \
	} \
 \
	DECLARE_FUNCTION(execAngleBetweenLines) \
	{ \
		P_GET_STRUCT_REF(FVector2D,Z_Param_Out_Line1Start); \
		P_GET_STRUCT_REF(FVector2D,Z_Param_Out_Line1End); \
		P_GET_STRUCT_REF(FVector2D,Z_Param_Out_Line2Start); \
		P_GET_STRUCT_REF(FVector2D,Z_Param_Out_Line2End); \
		P_FINISH; \
		*(float*)Z_Param__Result=UGestureMathLibrary::AngleBetweenLines(Z_Param_Out_Line1Start,Z_Param_Out_Line1End,Z_Param_Out_Line2Start,Z_Param_Out_Line2End); \
	}


#define Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesUGestureMathLibrary(); \
	friend MOBILEGESTURERECOGNIZERPLUGIN_API class UClass* Z_Construct_UClass_UGestureMathLibrary(); \
	public: \
	DECLARE_CLASS(UGestureMathLibrary, UBlueprintFunctionLibrary, COMPILED_IN_FLAGS(0), 0, MobileGestureRecognizerPlugin, NO_API) \
	DECLARE_SERIALIZER(UGestureMathLibrary) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<UGestureMathLibrary*>(this); }


#define Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_INCLASS \
	private: \
	static void StaticRegisterNativesUGestureMathLibrary(); \
	friend MOBILEGESTURERECOGNIZERPLUGIN_API class UClass* Z_Construct_UClass_UGestureMathLibrary(); \
	public: \
	DECLARE_CLASS(UGestureMathLibrary, UBlueprintFunctionLibrary, COMPILED_IN_FLAGS(0), 0, MobileGestureRecognizerPlugin, NO_API) \
	DECLARE_SERIALIZER(UGestureMathLibrary) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<UGestureMathLibrary*>(this); }


#define Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UGestureMathLibrary(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UGestureMathLibrary) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UGestureMathLibrary); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UGestureMathLibrary); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UGestureMathLibrary(const UGestureMathLibrary& InCopy); \
public:


#define Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UGestureMathLibrary(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UGestureMathLibrary(const UGestureMathLibrary& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UGestureMathLibrary); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UGestureMathLibrary); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UGestureMathLibrary)


#define Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_42_PROLOG
#define Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_RPC_WRAPPERS \
	Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_INCLASS \
	Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_RPC_WRAPPERS_NO_PURE_DECLS \
	Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_INCLASS_NO_PURE_DECLS \
	Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h_45_ENHANCED_CONSTRUCTORS \
private: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID Plugins_Example_Project_Plugins_MobileGestureRecognizerPlugin_Source_MobileGestureRecognizerPlugin_Public_GestureMathLibrary_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
